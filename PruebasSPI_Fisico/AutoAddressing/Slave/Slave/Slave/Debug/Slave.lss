
Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  000008f4  00000988  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  00800126  00800126  000009ae  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000831  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ce  00000000  00000000  000012bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000346  00000000  00000000  0000198b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001cd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043b  00000000  00000000  00001d94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000173  00000000  00000000  000021cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00002342  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__vector_17>
  48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	63 64       	ori	r22, 0x43	; 67
  6a:	69 6e       	ori	r22, 0xE9	; 233
  6c:	6f 70       	andi	r22, 0x0F	; 15
  6e:	73 75       	andi	r23, 0x53	; 83
  70:	78 58       	subi	r23, 0x88	; 136
  72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	11 e0       	ldi	r17, 0x01	; 1
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b1 e0       	ldi	r27, 0x01	; 1
  86:	e4 ef       	ldi	r30, 0xF4	; 244
  88:	f8 e0       	ldi	r31, 0x08	; 8
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a6 32       	cpi	r26, 0x26	; 38
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	a6 e2       	ldi	r26, 0x26	; 38
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
  9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
  a0:	a8 35       	cpi	r26, 0x58	; 88
  a2:	b2 07       	cpc	r27, r18
  a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
  a6:	0e 94 c8 00 	call	0x190	; 0x190 <main>
  aa:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <_exit>

000000ae <__bad_interrupt>:
  ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <SPI_init>:
}

uint8_t SPI_receive(void){
	while(!(SPSR & (1 << SPIF)));	// Wait until transmission is complete
	return SPDR;					// Return into the SPDR register
}
  b2:	84 b1       	in	r24, 0x04	; 4
  b4:	87 7f       	andi	r24, 0xF7	; 247
  b6:	84 b9       	out	0x04, r24	; 4
  b8:	84 b1       	in	r24, 0x04	; 4
  ba:	80 61       	ori	r24, 0x10	; 16
  bc:	84 b9       	out	0x04, r24	; 4
  be:	84 b1       	in	r24, 0x04	; 4
  c0:	8f 7d       	andi	r24, 0xDF	; 223
  c2:	84 b9       	out	0x04, r24	; 4
  c4:	84 b1       	in	r24, 0x04	; 4
  c6:	8b 7f       	andi	r24, 0xFB	; 251
  c8:	84 b9       	out	0x04, r24	; 4
  ca:	80 ec       	ldi	r24, 0xC0	; 192
  cc:	8c bd       	out	0x2c, r24	; 44
  ce:	78 94       	sei
  d0:	08 95       	ret

000000d2 <__vector_17>:
volatile char jsonin[41];

uint8_t counter_spi = 0;
bool recording = false;

ISR(SPI_STC_vect) {  // SPI interrupt routine
  d2:	1f 92       	push	r1
  d4:	0f 92       	push	r0
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	0f 92       	push	r0
  da:	11 24       	eor	r1, r1
  dc:	2f 93       	push	r18
  de:	3f 93       	push	r19
  e0:	8f 93       	push	r24
  e2:	9f 93       	push	r25
  e4:	af 93       	push	r26
  e6:	bf 93       	push	r27
  e8:	ef 93       	push	r30
  ea:	ff 93       	push	r31
	if (flag)
  ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f0:	88 23       	and	r24, r24
  f2:	a1 f0       	breq	.+40     	; 0x11c <__vector_17+0x4a>
	{
		data = SPDR;  // Read received data once
  f4:	8e b5       	in	r24, 0x2e	; 46
  f6:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <data>
		if (my_address == 0 && data < 16)
  fa:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <my_address>
  fe:	91 11       	cpse	r25, r1
 100:	05 c0       	rjmp	.+10     	; 0x10c <__vector_17+0x3a>
 102:	80 31       	cpi	r24, 0x10	; 16
 104:	18 f4       	brcc	.+6      	; 0x10c <__vector_17+0x3a>
		{
			my_address = data;
 106:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <my_address>
 10a:	03 c0       	rjmp	.+6      	; 0x112 <__vector_17+0x40>
		}else if (my_address != 0)
 10c:	91 11       	cpse	r25, r1
		{
			flag = 0;
 10e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		counter =  data + 1;
 112:	8f 5f       	subi	r24, 0xFF	; 255
 114:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <counter>
		SPDR = counter;
 118:	8e bd       	out	0x2e, r24	; 46
 11a:	2d c0       	rjmp	.+90     	; 0x176 <__vector_17+0xa4>
	}else{
		data = SPDR; 
 11c:	8e b5       	in	r24, 0x2e	; 46
 11e:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <data>
		uint8_t new_data = data;
		if ((char*)new_data == '{')
 122:	28 2f       	mov	r18, r24
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	2b 37       	cpi	r18, 0x7B	; 123
 128:	31 05       	cpc	r19, r1
 12a:	61 f4       	brne	.+24     	; 0x144 <__vector_17+0x72>
			{
				recording = true;
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <__data_end>
				counter_spi = 0;
 132:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <counter_spi>
				// Limpiar el buffer antes de iniciar una nueva grabación
				memset(jsonin, 0, 41);
 136:	99 e2       	ldi	r25, 0x29	; 41
 138:	ed e2       	ldi	r30, 0x2D	; 45
 13a:	f1 e0       	ldi	r31, 0x01	; 1
 13c:	df 01       	movw	r26, r30
 13e:	1d 92       	st	X+, r1
 140:	9a 95       	dec	r25
 142:	e9 f7       	brne	.-6      	; 0x13e <__vector_17+0x6c>
			}
		if ((char*)new_data == '}' && recording)
 144:	2d 37       	cpi	r18, 0x7D	; 125
 146:	31 05       	cpc	r19, r1
 148:	29 f4       	brne	.+10     	; 0x154 <__vector_17+0x82>
 14a:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <__data_end>
 14e:	91 11       	cpse	r25, r1
		{
			recording = false;
 150:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
		}
		
		if (recording)
 154:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <__data_end>
 158:	99 23       	and	r25, r25
 15a:	61 f0       	breq	.+24     	; 0x174 <__vector_17+0xa2>
		{
			if (counter_spi < 41)
 15c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <counter_spi>
 160:	99 32       	cpi	r25, 0x29	; 41
 162:	40 f4       	brcc	.+16     	; 0x174 <__vector_17+0xa2>
			{
				jsonin[counter_spi] = (char*)new_data;
 164:	e9 2f       	mov	r30, r25
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	e3 5d       	subi	r30, 0xD3	; 211
 16a:	fe 4f       	sbci	r31, 0xFE	; 254
 16c:	80 83       	st	Z, r24
				counter_spi++;
 16e:	9f 5f       	subi	r25, 0xFF	; 255
 170:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <counter_spi>
			}
		}
		SPDR = new_data;
 174:	8e bd       	out	0x2e, r24	; 46
	}
	
	
}
 176:	ff 91       	pop	r31
 178:	ef 91       	pop	r30
 17a:	bf 91       	pop	r27
 17c:	af 91       	pop	r26
 17e:	9f 91       	pop	r25
 180:	8f 91       	pop	r24
 182:	3f 91       	pop	r19
 184:	2f 91       	pop	r18
 186:	0f 90       	pop	r0
 188:	0f be       	out	0x3f, r0	; 63
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti

00000190 <main>:
uint8_t prm1_read;
uint8_t prm2_read;

int main(void)
{
	set_bit(DDRD, 2);
 190:	8a b1       	in	r24, 0x0a	; 10
 192:	84 60       	ori	r24, 0x04	; 4
 194:	8a b9       	out	0x0a, r24	; 10
	set_bit(DDRD, 3);
 196:	8a b1       	in	r24, 0x0a	; 10
 198:	88 60       	ori	r24, 0x08	; 8
 19a:	8a b9       	out	0x0a, r24	; 10
	set_bit(DDRD, 4);
 19c:	8a b1       	in	r24, 0x0a	; 10
 19e:	80 61       	ori	r24, 0x10	; 16
 1a0:	8a b9       	out	0x0a, r24	; 10
	set_bit(DDRD, 5);
 1a2:	8a b1       	in	r24, 0x0a	; 10
 1a4:	80 62       	ori	r24, 0x20	; 32
 1a6:	8a b9       	out	0x0a, r24	; 10
	SPI_init();
 1a8:	0e 94 59 00 	call	0xb2	; 0xb2 <SPI_init>
    /* Replace with your application code */
    while (1) 
    {
		sscanf(jsonin, "{\"id\":%d, \"fnc\":%u, \"prm\":[%u, %u]}", &id_read, &fnc_read, &prm1_read, &prm2_read);
 1ac:	86 e5       	ldi	r24, 0x56	; 86
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	9f 93       	push	r25
 1b2:	8f 93       	push	r24
 1b4:	8c e2       	ldi	r24, 0x2C	; 44
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	9f 93       	push	r25
 1ba:	8f 93       	push	r24
 1bc:	87 e5       	ldi	r24, 0x57	; 87
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	9f 93       	push	r25
 1c2:	8f 93       	push	r24
 1c4:	8b e2       	ldi	r24, 0x2B	; 43
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	9f 93       	push	r25
 1ca:	8f 93       	push	r24
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	9f 93       	push	r25
 1d2:	8f 93       	push	r24
 1d4:	8d e2       	ldi	r24, 0x2D	; 45
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	0e 94 0d 01 	call	0x21a	; 0x21a <sscanf>
		if (my_address == id_read)
 1e0:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <my_address>
 1e4:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <id_read>
 1e8:	2d b7       	in	r18, 0x3d	; 61
 1ea:	3e b7       	in	r19, 0x3e	; 62
 1ec:	24 5f       	subi	r18, 0xF4	; 244
 1ee:	3f 4f       	sbci	r19, 0xFF	; 255
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	f8 94       	cli
 1f4:	3e bf       	out	0x3e, r19	; 62
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	2d bf       	out	0x3d, r18	; 61
 1fa:	98 13       	cpse	r25, r24
 1fc:	07 c0       	rjmp	.+14     	; 0x20c <main+0x7c>
		{
			set_bit(PORTD, 2);
 1fe:	8b b1       	in	r24, 0x0b	; 11
 200:	84 60       	ori	r24, 0x04	; 4
 202:	8b b9       	out	0x0b, r24	; 11
			clear_bit(PORTD, 3);
 204:	8b b1       	in	r24, 0x0b	; 11
 206:	87 7f       	andi	r24, 0xF7	; 247
 208:	8b b9       	out	0x0b, r24	; 11
 20a:	d0 cf       	rjmp	.-96     	; 0x1ac <main+0x1c>
		}else{
			clear_bit(PORTD, 2);
 20c:	8b b1       	in	r24, 0x0b	; 11
 20e:	8b 7f       	andi	r24, 0xFB	; 251
 210:	8b b9       	out	0x0b, r24	; 11
			set_bit(PORTD, 3);
 212:	8b b1       	in	r24, 0x0b	; 11
 214:	88 60       	ori	r24, 0x08	; 8
 216:	8b b9       	out	0x0b, r24	; 11
 218:	c9 cf       	rjmp	.-110    	; 0x1ac <main+0x1c>

0000021a <sscanf>:
 21a:	ae e0       	ldi	r26, 0x0E	; 14
 21c:	b0 e0       	ldi	r27, 0x00	; 0
 21e:	e3 e1       	ldi	r30, 0x13	; 19
 220:	f1 e0       	ldi	r31, 0x01	; 1
 222:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__prologue_saves__+0x20>
 226:	85 e0       	ldi	r24, 0x05	; 5
 228:	8c 83       	std	Y+4, r24	; 0x04
 22a:	8b 89       	ldd	r24, Y+19	; 0x13
 22c:	9c 89       	ldd	r25, Y+20	; 0x14
 22e:	9a 83       	std	Y+2, r25	; 0x02
 230:	89 83       	std	Y+1, r24	; 0x01
 232:	ae 01       	movw	r20, r28
 234:	49 5e       	subi	r20, 0xE9	; 233
 236:	5f 4f       	sbci	r21, 0xFF	; 255
 238:	6d 89       	ldd	r22, Y+21	; 0x15
 23a:	7e 89       	ldd	r23, Y+22	; 0x16
 23c:	ce 01       	movw	r24, r28
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	0e 94 c2 02 	call	0x584	; 0x584 <vfscanf>
 244:	2e 96       	adiw	r28, 0x0e	; 14
 246:	e2 e0       	ldi	r30, 0x02	; 2
 248:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__epilogue_restores__+0x20>

0000024c <putval>:
 24c:	20 fd       	sbrc	r18, 0
 24e:	09 c0       	rjmp	.+18     	; 0x262 <putval+0x16>
 250:	fc 01       	movw	r30, r24
 252:	23 fd       	sbrc	r18, 3
 254:	05 c0       	rjmp	.+10     	; 0x260 <putval+0x14>
 256:	22 ff       	sbrs	r18, 2
 258:	02 c0       	rjmp	.+4      	; 0x25e <putval+0x12>
 25a:	73 83       	std	Z+3, r23	; 0x03
 25c:	62 83       	std	Z+2, r22	; 0x02
 25e:	51 83       	std	Z+1, r21	; 0x01
 260:	40 83       	st	Z, r20
 262:	08 95       	ret

00000264 <mulacc>:
 264:	44 fd       	sbrc	r20, 4
 266:	17 c0       	rjmp	.+46     	; 0x296 <mulacc+0x32>
 268:	46 fd       	sbrc	r20, 6
 26a:	17 c0       	rjmp	.+46     	; 0x29a <mulacc+0x36>
 26c:	ab 01       	movw	r20, r22
 26e:	bc 01       	movw	r22, r24
 270:	da 01       	movw	r26, r20
 272:	fb 01       	movw	r30, r22
 274:	aa 0f       	add	r26, r26
 276:	bb 1f       	adc	r27, r27
 278:	ee 1f       	adc	r30, r30
 27a:	ff 1f       	adc	r31, r31
 27c:	10 94       	com	r1
 27e:	d1 f7       	brne	.-12     	; 0x274 <mulacc+0x10>
 280:	4a 0f       	add	r20, r26
 282:	5b 1f       	adc	r21, r27
 284:	6e 1f       	adc	r22, r30
 286:	7f 1f       	adc	r23, r31
 288:	cb 01       	movw	r24, r22
 28a:	ba 01       	movw	r22, r20
 28c:	66 0f       	add	r22, r22
 28e:	77 1f       	adc	r23, r23
 290:	88 1f       	adc	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	09 c0       	rjmp	.+18     	; 0x2a8 <mulacc+0x44>
 296:	33 e0       	ldi	r19, 0x03	; 3
 298:	01 c0       	rjmp	.+2      	; 0x29c <mulacc+0x38>
 29a:	34 e0       	ldi	r19, 0x04	; 4
 29c:	66 0f       	add	r22, r22
 29e:	77 1f       	adc	r23, r23
 2a0:	88 1f       	adc	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	31 50       	subi	r19, 0x01	; 1
 2a6:	d1 f7       	brne	.-12     	; 0x29c <mulacc+0x38>
 2a8:	62 0f       	add	r22, r18
 2aa:	71 1d       	adc	r23, r1
 2ac:	81 1d       	adc	r24, r1
 2ae:	91 1d       	adc	r25, r1
 2b0:	08 95       	ret

000002b2 <skip_spaces>:
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	8c 01       	movw	r16, r24
 2bc:	c8 01       	movw	r24, r16
 2be:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 2c2:	ec 01       	movw	r28, r24
 2c4:	97 fd       	sbrc	r25, 7
 2c6:	08 c0       	rjmp	.+16     	; 0x2d8 <skip_spaces+0x26>
 2c8:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <isspace>
 2cc:	89 2b       	or	r24, r25
 2ce:	b1 f7       	brne	.-20     	; 0x2bc <skip_spaces+0xa>
 2d0:	b8 01       	movw	r22, r16
 2d2:	ce 01       	movw	r24, r28
 2d4:	0e 94 25 04 	call	0x84a	; 0x84a <ungetc>
 2d8:	ce 01       	movw	r24, r28
 2da:	df 91       	pop	r29
 2dc:	cf 91       	pop	r28
 2de:	1f 91       	pop	r17
 2e0:	0f 91       	pop	r16
 2e2:	08 95       	ret

000002e4 <conv_int>:
 2e4:	8f 92       	push	r8
 2e6:	9f 92       	push	r9
 2e8:	af 92       	push	r10
 2ea:	bf 92       	push	r11
 2ec:	ef 92       	push	r14
 2ee:	ff 92       	push	r15
 2f0:	0f 93       	push	r16
 2f2:	1f 93       	push	r17
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	8c 01       	movw	r16, r24
 2fa:	d6 2f       	mov	r29, r22
 2fc:	7a 01       	movw	r14, r20
 2fe:	b2 2e       	mov	r11, r18
 300:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 304:	9c 01       	movw	r18, r24
 306:	33 27       	eor	r19, r19
 308:	2b 32       	cpi	r18, 0x2B	; 43
 30a:	31 05       	cpc	r19, r1
 30c:	31 f0       	breq	.+12     	; 0x31a <conv_int+0x36>
 30e:	2d 32       	cpi	r18, 0x2D	; 45
 310:	31 05       	cpc	r19, r1
 312:	61 f4       	brne	.+24     	; 0x32c <conv_int+0x48>
 314:	8b 2d       	mov	r24, r11
 316:	80 68       	ori	r24, 0x80	; 128
 318:	b8 2e       	mov	r11, r24
 31a:	d1 50       	subi	r29, 0x01	; 1
 31c:	11 f4       	brne	.+4      	; 0x322 <conv_int+0x3e>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	68 c0       	rjmp	.+208    	; 0x3f2 <conv_int+0x10e>
 322:	c8 01       	movw	r24, r16
 324:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 328:	97 fd       	sbrc	r25, 7
 32a:	f9 cf       	rjmp	.-14     	; 0x31e <conv_int+0x3a>
 32c:	cb 2d       	mov	r28, r11
 32e:	cd 7f       	andi	r28, 0xFD	; 253
 330:	2b 2d       	mov	r18, r11
 332:	20 73       	andi	r18, 0x30	; 48
 334:	09 f5       	brne	.+66     	; 0x378 <conv_int+0x94>
 336:	80 33       	cpi	r24, 0x30	; 48
 338:	f9 f4       	brne	.+62     	; 0x378 <conv_int+0x94>
 33a:	aa 24       	eor	r10, r10
 33c:	aa 94       	dec	r10
 33e:	ad 0e       	add	r10, r29
 340:	09 f4       	brne	.+2      	; 0x344 <conv_int+0x60>
 342:	43 c0       	rjmp	.+134    	; 0x3ca <conv_int+0xe6>
 344:	c8 01       	movw	r24, r16
 346:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 34a:	97 fd       	sbrc	r25, 7
 34c:	3e c0       	rjmp	.+124    	; 0x3ca <conv_int+0xe6>
 34e:	9c 01       	movw	r18, r24
 350:	2f 7d       	andi	r18, 0xDF	; 223
 352:	33 27       	eor	r19, r19
 354:	28 35       	cpi	r18, 0x58	; 88
 356:	31 05       	cpc	r19, r1
 358:	49 f4       	brne	.+18     	; 0x36c <conv_int+0x88>
 35a:	c2 64       	ori	r28, 0x42	; 66
 35c:	d2 50       	subi	r29, 0x02	; 2
 35e:	a9 f1       	breq	.+106    	; 0x3ca <conv_int+0xe6>
 360:	c8 01       	movw	r24, r16
 362:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 366:	97 ff       	sbrs	r25, 7
 368:	07 c0       	rjmp	.+14     	; 0x378 <conv_int+0x94>
 36a:	2f c0       	rjmp	.+94     	; 0x3ca <conv_int+0xe6>
 36c:	b6 fe       	sbrs	r11, 6
 36e:	02 c0       	rjmp	.+4      	; 0x374 <conv_int+0x90>
 370:	c2 60       	ori	r28, 0x02	; 2
 372:	01 c0       	rjmp	.+2      	; 0x376 <conv_int+0x92>
 374:	c2 61       	ori	r28, 0x12	; 18
 376:	da 2d       	mov	r29, r10
 378:	81 2c       	mov	r8, r1
 37a:	91 2c       	mov	r9, r1
 37c:	54 01       	movw	r10, r8
 37e:	20 ed       	ldi	r18, 0xD0	; 208
 380:	28 0f       	add	r18, r24
 382:	28 30       	cpi	r18, 0x08	; 8
 384:	80 f0       	brcs	.+32     	; 0x3a6 <conv_int+0xc2>
 386:	c4 ff       	sbrs	r28, 4
 388:	04 c0       	rjmp	.+8      	; 0x392 <conv_int+0xae>
 38a:	b8 01       	movw	r22, r16
 38c:	0e 94 25 04 	call	0x84a	; 0x84a <ungetc>
 390:	19 c0       	rjmp	.+50     	; 0x3c4 <conv_int+0xe0>
 392:	2a 30       	cpi	r18, 0x0A	; 10
 394:	40 f0       	brcs	.+16     	; 0x3a6 <conv_int+0xc2>
 396:	c6 ff       	sbrs	r28, 6
 398:	f8 cf       	rjmp	.-16     	; 0x38a <conv_int+0xa6>
 39a:	2f 7d       	andi	r18, 0xDF	; 223
 39c:	3f ee       	ldi	r19, 0xEF	; 239
 39e:	32 0f       	add	r19, r18
 3a0:	36 30       	cpi	r19, 0x06	; 6
 3a2:	98 f7       	brcc	.-26     	; 0x38a <conv_int+0xa6>
 3a4:	27 50       	subi	r18, 0x07	; 7
 3a6:	4c 2f       	mov	r20, r28
 3a8:	c5 01       	movw	r24, r10
 3aa:	b4 01       	movw	r22, r8
 3ac:	0e 94 32 01 	call	0x264	; 0x264 <mulacc>
 3b0:	4b 01       	movw	r8, r22
 3b2:	5c 01       	movw	r10, r24
 3b4:	c2 60       	ori	r28, 0x02	; 2
 3b6:	d1 50       	subi	r29, 0x01	; 1
 3b8:	59 f0       	breq	.+22     	; 0x3d0 <conv_int+0xec>
 3ba:	c8 01       	movw	r24, r16
 3bc:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 3c0:	97 ff       	sbrs	r25, 7
 3c2:	dd cf       	rjmp	.-70     	; 0x37e <conv_int+0x9a>
 3c4:	c1 fd       	sbrc	r28, 1
 3c6:	04 c0       	rjmp	.+8      	; 0x3d0 <conv_int+0xec>
 3c8:	aa cf       	rjmp	.-172    	; 0x31e <conv_int+0x3a>
 3ca:	81 2c       	mov	r8, r1
 3cc:	91 2c       	mov	r9, r1
 3ce:	54 01       	movw	r10, r8
 3d0:	c7 ff       	sbrs	r28, 7
 3d2:	08 c0       	rjmp	.+16     	; 0x3e4 <conv_int+0x100>
 3d4:	b0 94       	com	r11
 3d6:	a0 94       	com	r10
 3d8:	90 94       	com	r9
 3da:	80 94       	com	r8
 3dc:	81 1c       	adc	r8, r1
 3de:	91 1c       	adc	r9, r1
 3e0:	a1 1c       	adc	r10, r1
 3e2:	b1 1c       	adc	r11, r1
 3e4:	2c 2f       	mov	r18, r28
 3e6:	b5 01       	movw	r22, r10
 3e8:	a4 01       	movw	r20, r8
 3ea:	c7 01       	movw	r24, r14
 3ec:	0e 94 26 01 	call	0x24c	; 0x24c <putval>
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	1f 91       	pop	r17
 3f8:	0f 91       	pop	r16
 3fa:	ff 90       	pop	r15
 3fc:	ef 90       	pop	r14
 3fe:	bf 90       	pop	r11
 400:	af 90       	pop	r10
 402:	9f 90       	pop	r9
 404:	8f 90       	pop	r8
 406:	08 95       	ret

00000408 <conv_brk>:
 408:	a0 e2       	ldi	r26, 0x20	; 32
 40a:	b0 e0       	ldi	r27, 0x00	; 0
 40c:	ea e0       	ldi	r30, 0x0A	; 10
 40e:	f2 e0       	ldi	r31, 0x02	; 2
 410:	0c 94 44 04 	jmp	0x888	; 0x888 <__prologue_saves__+0x6>
 414:	5c 01       	movw	r10, r24
 416:	96 2e       	mov	r9, r22
 418:	7a 01       	movw	r14, r20
 41a:	f9 01       	movw	r30, r18
 41c:	8e 01       	movw	r16, r28
 41e:	0f 5f       	subi	r16, 0xFF	; 255
 420:	1f 4f       	sbci	r17, 0xFF	; 255
 422:	68 01       	movw	r12, r16
 424:	80 e2       	ldi	r24, 0x20	; 32
 426:	d8 01       	movw	r26, r16
 428:	1d 92       	st	X+, r1
 42a:	8a 95       	dec	r24
 42c:	e9 f7       	brne	.-6      	; 0x428 <conv_brk+0x20>
 42e:	d5 01       	movw	r26, r10
 430:	13 96       	adiw	r26, 0x03	; 3
 432:	8c 90       	ld	r8, X
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	61 2c       	mov	r6, r1
 43a:	71 2c       	mov	r7, r1
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	61 e0       	ldi	r22, 0x01	; 1
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	83 fc       	sbrc	r8, 3
 444:	25 91       	lpm	r18, Z+
 446:	83 fe       	sbrs	r8, 3
 448:	21 91       	ld	r18, Z+
 44a:	8f 01       	movw	r16, r30
 44c:	52 2e       	mov	r5, r18
 44e:	21 11       	cpse	r18, r1
 450:	03 c0       	rjmp	.+6      	; 0x458 <conv_brk+0x50>
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	92 c0       	rjmp	.+292    	; 0x57c <conv_brk+0x174>
 458:	2e 35       	cpi	r18, 0x5E	; 94
 45a:	11 f4       	brne	.+4      	; 0x460 <conv_brk+0x58>
 45c:	00 97       	sbiw	r24, 0x00	; 0
 45e:	51 f1       	breq	.+84     	; 0x4b4 <conv_brk+0xac>
 460:	43 2f       	mov	r20, r19
 462:	50 e0       	ldi	r21, 0x00	; 0
 464:	48 17       	cp	r20, r24
 466:	59 07       	cpc	r21, r25
 468:	3c f4       	brge	.+14     	; 0x478 <conv_brk+0x70>
 46a:	2d 35       	cpi	r18, 0x5D	; 93
 46c:	59 f1       	breq	.+86     	; 0x4c4 <conv_brk+0xbc>
 46e:	2d 32       	cpi	r18, 0x2D	; 45
 470:	19 f4       	brne	.+6      	; 0x478 <conv_brk+0x70>
 472:	77 20       	and	r7, r7
 474:	09 f1       	breq	.+66     	; 0x4b8 <conv_brk+0xb0>
 476:	03 c0       	rjmp	.+6      	; 0x47e <conv_brk+0x76>
 478:	77 20       	and	r7, r7
 47a:	09 f4       	brne	.+2      	; 0x47e <conv_brk+0x76>
 47c:	6a c0       	rjmp	.+212    	; 0x552 <conv_brk+0x14a>
 47e:	45 2d       	mov	r20, r5
 480:	46 95       	lsr	r20
 482:	46 95       	lsr	r20
 484:	46 95       	lsr	r20
 486:	d6 01       	movw	r26, r12
 488:	a4 0f       	add	r26, r20
 48a:	b1 1d       	adc	r27, r1
 48c:	45 2d       	mov	r20, r5
 48e:	47 70       	andi	r20, 0x07	; 7
 490:	8b 01       	movw	r16, r22
 492:	02 c0       	rjmp	.+4      	; 0x498 <conv_brk+0x90>
 494:	00 0f       	add	r16, r16
 496:	11 1f       	adc	r17, r17
 498:	4a 95       	dec	r20
 49a:	e2 f7       	brpl	.-8      	; 0x494 <conv_brk+0x8c>
 49c:	a8 01       	movw	r20, r16
 49e:	5c 91       	ld	r21, X
 4a0:	45 2b       	or	r20, r21
 4a2:	4c 93       	st	X, r20
 4a4:	65 14       	cp	r6, r5
 4a6:	59 f0       	breq	.+22     	; 0x4be <conv_brk+0xb6>
 4a8:	56 14       	cp	r5, r6
 4aa:	10 f4       	brcc	.+4      	; 0x4b0 <conv_brk+0xa8>
 4ac:	53 94       	inc	r5
 4ae:	e7 cf       	rjmp	.-50     	; 0x47e <conv_brk+0x76>
 4b0:	5a 94       	dec	r5
 4b2:	e5 cf       	rjmp	.-54     	; 0x47e <conv_brk+0x76>
 4b4:	31 e0       	ldi	r19, 0x01	; 1
 4b6:	04 c0       	rjmp	.+8      	; 0x4c0 <conv_brk+0xb8>
 4b8:	77 24       	eor	r7, r7
 4ba:	73 94       	inc	r7
 4bc:	01 c0       	rjmp	.+2      	; 0x4c0 <conv_brk+0xb8>
 4be:	71 2c       	mov	r7, r1
 4c0:	01 96       	adiw	r24, 0x01	; 1
 4c2:	bf cf       	rjmp	.-130    	; 0x442 <conv_brk+0x3a>
 4c4:	77 20       	and	r7, r7
 4c6:	19 f0       	breq	.+6      	; 0x4ce <conv_brk+0xc6>
 4c8:	8e 81       	ldd	r24, Y+6	; 0x06
 4ca:	80 62       	ori	r24, 0x20	; 32
 4cc:	8e 83       	std	Y+6, r24	; 0x06
 4ce:	31 11       	cpse	r19, r1
 4d0:	03 c0       	rjmp	.+6      	; 0x4d8 <conv_brk+0xd0>
 4d2:	88 24       	eor	r8, r8
 4d4:	83 94       	inc	r8
 4d6:	17 c0       	rjmp	.+46     	; 0x506 <conv_brk+0xfe>
 4d8:	f6 01       	movw	r30, r12
 4da:	9e 01       	movw	r18, r28
 4dc:	2f 5d       	subi	r18, 0xDF	; 223
 4de:	3f 4f       	sbci	r19, 0xFF	; 255
 4e0:	80 81       	ld	r24, Z
 4e2:	80 95       	com	r24
 4e4:	81 93       	st	Z+, r24
 4e6:	2e 17       	cp	r18, r30
 4e8:	3f 07       	cpc	r19, r31
 4ea:	d1 f7       	brne	.-12     	; 0x4e0 <conv_brk+0xd8>
 4ec:	f2 cf       	rjmp	.-28     	; 0x4d2 <conv_brk+0xca>
 4ee:	e1 14       	cp	r14, r1
 4f0:	f1 04       	cpc	r15, r1
 4f2:	29 f0       	breq	.+10     	; 0x4fe <conv_brk+0xf6>
 4f4:	d7 01       	movw	r26, r14
 4f6:	8c 93       	st	X, r24
 4f8:	f7 01       	movw	r30, r14
 4fa:	31 96       	adiw	r30, 0x01	; 1
 4fc:	7f 01       	movw	r14, r30
 4fe:	9a 94       	dec	r9
 500:	81 2c       	mov	r8, r1
 502:	99 20       	and	r9, r9
 504:	f9 f0       	breq	.+62     	; 0x544 <conv_brk+0x13c>
 506:	c5 01       	movw	r24, r10
 508:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 50c:	97 fd       	sbrc	r25, 7
 50e:	18 c0       	rjmp	.+48     	; 0x540 <conv_brk+0x138>
 510:	fc 01       	movw	r30, r24
 512:	ff 27       	eor	r31, r31
 514:	23 e0       	ldi	r18, 0x03	; 3
 516:	f5 95       	asr	r31
 518:	e7 95       	ror	r30
 51a:	2a 95       	dec	r18
 51c:	e1 f7       	brne	.-8      	; 0x516 <conv_brk+0x10e>
 51e:	ec 0d       	add	r30, r12
 520:	fd 1d       	adc	r31, r13
 522:	20 81       	ld	r18, Z
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	ac 01       	movw	r20, r24
 528:	47 70       	andi	r20, 0x07	; 7
 52a:	55 27       	eor	r21, r21
 52c:	02 c0       	rjmp	.+4      	; 0x532 <conv_brk+0x12a>
 52e:	35 95       	asr	r19
 530:	27 95       	ror	r18
 532:	4a 95       	dec	r20
 534:	e2 f7       	brpl	.-8      	; 0x52e <conv_brk+0x126>
 536:	20 fd       	sbrc	r18, 0
 538:	da cf       	rjmp	.-76     	; 0x4ee <conv_brk+0xe6>
 53a:	b5 01       	movw	r22, r10
 53c:	0e 94 25 04 	call	0x84a	; 0x84a <ungetc>
 540:	81 10       	cpse	r8, r1
 542:	87 cf       	rjmp	.-242    	; 0x452 <conv_brk+0x4a>
 544:	e1 14       	cp	r14, r1
 546:	f1 04       	cpc	r15, r1
 548:	11 f0       	breq	.+4      	; 0x54e <conv_brk+0x146>
 54a:	d7 01       	movw	r26, r14
 54c:	1c 92       	st	X, r1
 54e:	c8 01       	movw	r24, r16
 550:	15 c0       	rjmp	.+42     	; 0x57c <conv_brk+0x174>
 552:	42 2f       	mov	r20, r18
 554:	46 95       	lsr	r20
 556:	46 95       	lsr	r20
 558:	46 95       	lsr	r20
 55a:	d6 01       	movw	r26, r12
 55c:	a4 0f       	add	r26, r20
 55e:	b1 1d       	adc	r27, r1
 560:	42 2f       	mov	r20, r18
 562:	47 70       	andi	r20, 0x07	; 7
 564:	8b 01       	movw	r16, r22
 566:	02 c0       	rjmp	.+4      	; 0x56c <conv_brk+0x164>
 568:	00 0f       	add	r16, r16
 56a:	11 1f       	adc	r17, r17
 56c:	4a 95       	dec	r20
 56e:	e2 f7       	brpl	.-8      	; 0x568 <conv_brk+0x160>
 570:	a8 01       	movw	r20, r16
 572:	5c 91       	ld	r21, X
 574:	45 2b       	or	r20, r21
 576:	4c 93       	st	X, r20
 578:	62 2e       	mov	r6, r18
 57a:	a2 cf       	rjmp	.-188    	; 0x4c0 <conv_brk+0xb8>
 57c:	a0 96       	adiw	r28, 0x20	; 32
 57e:	ef e0       	ldi	r30, 0x0F	; 15
 580:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__epilogue_restores__+0x6>

00000584 <vfscanf>:
 584:	a0 e0       	ldi	r26, 0x00	; 0
 586:	b0 e0       	ldi	r27, 0x00	; 0
 588:	e8 ec       	ldi	r30, 0xC8	; 200
 58a:	f2 e0       	ldi	r31, 0x02	; 2
 58c:	0c 94 44 04 	jmp	0x888	; 0x888 <__prologue_saves__+0x6>
 590:	6c 01       	movw	r12, r24
 592:	eb 01       	movw	r28, r22
 594:	5a 01       	movw	r10, r20
 596:	fc 01       	movw	r30, r24
 598:	17 82       	std	Z+7, r1	; 0x07
 59a:	16 82       	std	Z+6, r1	; 0x06
 59c:	51 2c       	mov	r5, r1
 59e:	f6 01       	movw	r30, r12
 5a0:	e3 80       	ldd	r14, Z+3	; 0x03
 5a2:	fe 01       	movw	r30, r28
 5a4:	e3 fc       	sbrc	r14, 3
 5a6:	85 91       	lpm	r24, Z+
 5a8:	e3 fe       	sbrs	r14, 3
 5aa:	81 91       	ld	r24, Z+
 5ac:	18 2f       	mov	r17, r24
 5ae:	ef 01       	movw	r28, r30
 5b0:	88 23       	and	r24, r24
 5b2:	09 f4       	brne	.+2      	; 0x5b6 <vfscanf+0x32>
 5b4:	ee c0       	rjmp	.+476    	; 0x792 <vfscanf+0x20e>
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <isspace>
 5bc:	89 2b       	or	r24, r25
 5be:	21 f0       	breq	.+8      	; 0x5c8 <vfscanf+0x44>
 5c0:	c6 01       	movw	r24, r12
 5c2:	0e 94 59 01 	call	0x2b2	; 0x2b2 <skip_spaces>
 5c6:	eb cf       	rjmp	.-42     	; 0x59e <vfscanf+0x1a>
 5c8:	15 32       	cpi	r17, 0x25	; 37
 5ca:	41 f4       	brne	.+16     	; 0x5dc <vfscanf+0x58>
 5cc:	fe 01       	movw	r30, r28
 5ce:	e3 fc       	sbrc	r14, 3
 5d0:	15 91       	lpm	r17, Z+
 5d2:	e3 fe       	sbrs	r14, 3
 5d4:	11 91       	ld	r17, Z+
 5d6:	ef 01       	movw	r28, r30
 5d8:	15 32       	cpi	r17, 0x25	; 37
 5da:	81 f4       	brne	.+32     	; 0x5fc <vfscanf+0x78>
 5dc:	c6 01       	movw	r24, r12
 5de:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 5e2:	97 fd       	sbrc	r25, 7
 5e4:	d4 c0       	rjmp	.+424    	; 0x78e <vfscanf+0x20a>
 5e6:	41 2f       	mov	r20, r17
 5e8:	50 e0       	ldi	r21, 0x00	; 0
 5ea:	9c 01       	movw	r18, r24
 5ec:	33 27       	eor	r19, r19
 5ee:	24 17       	cp	r18, r20
 5f0:	35 07       	cpc	r19, r21
 5f2:	a9 f2       	breq	.-86     	; 0x59e <vfscanf+0x1a>
 5f4:	b6 01       	movw	r22, r12
 5f6:	0e 94 25 04 	call	0x84a	; 0x84a <ungetc>
 5fa:	cb c0       	rjmp	.+406    	; 0x792 <vfscanf+0x20e>
 5fc:	1a 32       	cpi	r17, 0x2A	; 42
 5fe:	39 f4       	brne	.+14     	; 0x60e <vfscanf+0x8a>
 600:	e3 fc       	sbrc	r14, 3
 602:	15 91       	lpm	r17, Z+
 604:	e3 fe       	sbrs	r14, 3
 606:	11 91       	ld	r17, Z+
 608:	ef 01       	movw	r28, r30
 60a:	01 e0       	ldi	r16, 0x01	; 1
 60c:	01 c0       	rjmp	.+2      	; 0x610 <vfscanf+0x8c>
 60e:	00 e0       	ldi	r16, 0x00	; 0
 610:	f1 2c       	mov	r15, r1
 612:	20 ed       	ldi	r18, 0xD0	; 208
 614:	21 0f       	add	r18, r17
 616:	2a 30       	cpi	r18, 0x0A	; 10
 618:	80 f4       	brcc	.+32     	; 0x63a <vfscanf+0xb6>
 61a:	02 60       	ori	r16, 0x02	; 2
 61c:	6f 2d       	mov	r22, r15
 61e:	70 e0       	ldi	r23, 0x00	; 0
 620:	80 e0       	ldi	r24, 0x00	; 0
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	40 e2       	ldi	r20, 0x20	; 32
 626:	0e 94 32 01 	call	0x264	; 0x264 <mulacc>
 62a:	f6 2e       	mov	r15, r22
 62c:	fe 01       	movw	r30, r28
 62e:	e3 fc       	sbrc	r14, 3
 630:	15 91       	lpm	r17, Z+
 632:	e3 fe       	sbrs	r14, 3
 634:	11 91       	ld	r17, Z+
 636:	ef 01       	movw	r28, r30
 638:	ec cf       	rjmp	.-40     	; 0x612 <vfscanf+0x8e>
 63a:	01 ff       	sbrs	r16, 1
 63c:	03 c0       	rjmp	.+6      	; 0x644 <vfscanf+0xc0>
 63e:	f1 10       	cpse	r15, r1
 640:	03 c0       	rjmp	.+6      	; 0x648 <vfscanf+0xc4>
 642:	a7 c0       	rjmp	.+334    	; 0x792 <vfscanf+0x20e>
 644:	ff 24       	eor	r15, r15
 646:	fa 94       	dec	r15
 648:	18 36       	cpi	r17, 0x68	; 104
 64a:	19 f0       	breq	.+6      	; 0x652 <vfscanf+0xce>
 64c:	1c 36       	cpi	r17, 0x6C	; 108
 64e:	51 f0       	breq	.+20     	; 0x664 <vfscanf+0xe0>
 650:	10 c0       	rjmp	.+32     	; 0x672 <vfscanf+0xee>
 652:	fe 01       	movw	r30, r28
 654:	e3 fc       	sbrc	r14, 3
 656:	15 91       	lpm	r17, Z+
 658:	e3 fe       	sbrs	r14, 3
 65a:	11 91       	ld	r17, Z+
 65c:	ef 01       	movw	r28, r30
 65e:	18 36       	cpi	r17, 0x68	; 104
 660:	41 f4       	brne	.+16     	; 0x672 <vfscanf+0xee>
 662:	08 60       	ori	r16, 0x08	; 8
 664:	04 60       	ori	r16, 0x04	; 4
 666:	fe 01       	movw	r30, r28
 668:	e3 fc       	sbrc	r14, 3
 66a:	15 91       	lpm	r17, Z+
 66c:	e3 fe       	sbrs	r14, 3
 66e:	11 91       	ld	r17, Z+
 670:	ef 01       	movw	r28, r30
 672:	11 23       	and	r17, r17
 674:	09 f4       	brne	.+2      	; 0x678 <vfscanf+0xf4>
 676:	8d c0       	rjmp	.+282    	; 0x792 <vfscanf+0x20e>
 678:	61 2f       	mov	r22, r17
 67a:	70 e0       	ldi	r23, 0x00	; 0
 67c:	88 e6       	ldi	r24, 0x68	; 104
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <strchr_P>
 684:	89 2b       	or	r24, r25
 686:	09 f4       	brne	.+2      	; 0x68a <vfscanf+0x106>
 688:	84 c0       	rjmp	.+264    	; 0x792 <vfscanf+0x20e>
 68a:	00 fd       	sbrc	r16, 0
 68c:	07 c0       	rjmp	.+14     	; 0x69c <vfscanf+0x118>
 68e:	f5 01       	movw	r30, r10
 690:	80 80       	ld	r8, Z
 692:	91 80       	ldd	r9, Z+1	; 0x01
 694:	c5 01       	movw	r24, r10
 696:	02 96       	adiw	r24, 0x02	; 2
 698:	5c 01       	movw	r10, r24
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <vfscanf+0x11c>
 69c:	81 2c       	mov	r8, r1
 69e:	91 2c       	mov	r9, r1
 6a0:	1e 36       	cpi	r17, 0x6E	; 110
 6a2:	51 f4       	brne	.+20     	; 0x6b8 <vfscanf+0x134>
 6a4:	f6 01       	movw	r30, r12
 6a6:	46 81       	ldd	r20, Z+6	; 0x06
 6a8:	57 81       	ldd	r21, Z+7	; 0x07
 6aa:	60 e0       	ldi	r22, 0x00	; 0
 6ac:	70 e0       	ldi	r23, 0x00	; 0
 6ae:	20 2f       	mov	r18, r16
 6b0:	c4 01       	movw	r24, r8
 6b2:	0e 94 26 01 	call	0x24c	; 0x24c <putval>
 6b6:	73 cf       	rjmp	.-282    	; 0x59e <vfscanf+0x1a>
 6b8:	13 36       	cpi	r17, 0x63	; 99
 6ba:	a9 f4       	brne	.+42     	; 0x6e6 <vfscanf+0x162>
 6bc:	01 fd       	sbrc	r16, 1
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfscanf+0x140>
 6c0:	ff 24       	eor	r15, r15
 6c2:	f3 94       	inc	r15
 6c4:	c6 01       	movw	r24, r12
 6c6:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 6ca:	97 fd       	sbrc	r25, 7
 6cc:	60 c0       	rjmp	.+192    	; 0x78e <vfscanf+0x20a>
 6ce:	81 14       	cp	r8, r1
 6d0:	91 04       	cpc	r9, r1
 6d2:	29 f0       	breq	.+10     	; 0x6de <vfscanf+0x15a>
 6d4:	f4 01       	movw	r30, r8
 6d6:	80 83       	st	Z, r24
 6d8:	c4 01       	movw	r24, r8
 6da:	01 96       	adiw	r24, 0x01	; 1
 6dc:	4c 01       	movw	r8, r24
 6de:	fa 94       	dec	r15
 6e0:	f1 10       	cpse	r15, r1
 6e2:	f0 cf       	rjmp	.-32     	; 0x6c4 <vfscanf+0x140>
 6e4:	50 c0       	rjmp	.+160    	; 0x786 <vfscanf+0x202>
 6e6:	1b 35       	cpi	r17, 0x5B	; 91
 6e8:	59 f4       	brne	.+22     	; 0x700 <vfscanf+0x17c>
 6ea:	9e 01       	movw	r18, r28
 6ec:	a4 01       	movw	r20, r8
 6ee:	6f 2d       	mov	r22, r15
 6f0:	c6 01       	movw	r24, r12
 6f2:	0e 94 04 02 	call	0x408	; 0x408 <conv_brk>
 6f6:	ec 01       	movw	r28, r24
 6f8:	89 2b       	or	r24, r25
 6fa:	09 f0       	breq	.+2      	; 0x6fe <vfscanf+0x17a>
 6fc:	44 c0       	rjmp	.+136    	; 0x786 <vfscanf+0x202>
 6fe:	3e c0       	rjmp	.+124    	; 0x77c <vfscanf+0x1f8>
 700:	c6 01       	movw	r24, r12
 702:	0e 94 59 01 	call	0x2b2	; 0x2b2 <skip_spaces>
 706:	97 fd       	sbrc	r25, 7
 708:	42 c0       	rjmp	.+132    	; 0x78e <vfscanf+0x20a>
 70a:	1f 36       	cpi	r17, 0x6F	; 111
 70c:	61 f1       	breq	.+88     	; 0x766 <vfscanf+0x1e2>
 70e:	28 f4       	brcc	.+10     	; 0x71a <vfscanf+0x196>
 710:	14 36       	cpi	r17, 0x64	; 100
 712:	39 f1       	breq	.+78     	; 0x762 <vfscanf+0x1de>
 714:	19 36       	cpi	r17, 0x69	; 105
 716:	51 f1       	breq	.+84     	; 0x76c <vfscanf+0x1e8>
 718:	28 c0       	rjmp	.+80     	; 0x76a <vfscanf+0x1e6>
 71a:	13 37       	cpi	r17, 0x73	; 115
 71c:	71 f0       	breq	.+28     	; 0x73a <vfscanf+0x1b6>
 71e:	15 37       	cpi	r17, 0x75	; 117
 720:	01 f1       	breq	.+64     	; 0x762 <vfscanf+0x1de>
 722:	23 c0       	rjmp	.+70     	; 0x76a <vfscanf+0x1e6>
 724:	81 14       	cp	r8, r1
 726:	91 04       	cpc	r9, r1
 728:	29 f0       	breq	.+10     	; 0x734 <vfscanf+0x1b0>
 72a:	f4 01       	movw	r30, r8
 72c:	60 82       	st	Z, r6
 72e:	c4 01       	movw	r24, r8
 730:	01 96       	adiw	r24, 0x01	; 1
 732:	4c 01       	movw	r8, r24
 734:	fa 94       	dec	r15
 736:	ff 20       	and	r15, r15
 738:	71 f0       	breq	.+28     	; 0x756 <vfscanf+0x1d2>
 73a:	c6 01       	movw	r24, r12
 73c:	0e 94 e7 03 	call	0x7ce	; 0x7ce <fgetc>
 740:	3c 01       	movw	r6, r24
 742:	97 fd       	sbrc	r25, 7
 744:	08 c0       	rjmp	.+16     	; 0x756 <vfscanf+0x1d2>
 746:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <isspace>
 74a:	89 2b       	or	r24, r25
 74c:	59 f3       	breq	.-42     	; 0x724 <vfscanf+0x1a0>
 74e:	b6 01       	movw	r22, r12
 750:	c3 01       	movw	r24, r6
 752:	0e 94 25 04 	call	0x84a	; 0x84a <ungetc>
 756:	81 14       	cp	r8, r1
 758:	91 04       	cpc	r9, r1
 75a:	a9 f0       	breq	.+42     	; 0x786 <vfscanf+0x202>
 75c:	f4 01       	movw	r30, r8
 75e:	10 82       	st	Z, r1
 760:	12 c0       	rjmp	.+36     	; 0x786 <vfscanf+0x202>
 762:	00 62       	ori	r16, 0x20	; 32
 764:	03 c0       	rjmp	.+6      	; 0x76c <vfscanf+0x1e8>
 766:	00 61       	ori	r16, 0x10	; 16
 768:	01 c0       	rjmp	.+2      	; 0x76c <vfscanf+0x1e8>
 76a:	00 64       	ori	r16, 0x40	; 64
 76c:	20 2f       	mov	r18, r16
 76e:	a4 01       	movw	r20, r8
 770:	6f 2d       	mov	r22, r15
 772:	c6 01       	movw	r24, r12
 774:	0e 94 72 01 	call	0x2e4	; 0x2e4 <conv_int>
 778:	81 11       	cpse	r24, r1
 77a:	05 c0       	rjmp	.+10     	; 0x786 <vfscanf+0x202>
 77c:	f6 01       	movw	r30, r12
 77e:	83 81       	ldd	r24, Z+3	; 0x03
 780:	80 73       	andi	r24, 0x30	; 48
 782:	29 f4       	brne	.+10     	; 0x78e <vfscanf+0x20a>
 784:	06 c0       	rjmp	.+12     	; 0x792 <vfscanf+0x20e>
 786:	00 fd       	sbrc	r16, 0
 788:	0a cf       	rjmp	.-492    	; 0x59e <vfscanf+0x1a>
 78a:	53 94       	inc	r5
 78c:	08 cf       	rjmp	.-496    	; 0x59e <vfscanf+0x1a>
 78e:	55 20       	and	r5, r5
 790:	19 f0       	breq	.+6      	; 0x798 <vfscanf+0x214>
 792:	85 2d       	mov	r24, r5
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	02 c0       	rjmp	.+4      	; 0x79c <vfscanf+0x218>
 798:	8f ef       	ldi	r24, 0xFF	; 255
 79a:	9f ef       	ldi	r25, 0xFF	; 255
 79c:	cd b7       	in	r28, 0x3d	; 61
 79e:	de b7       	in	r29, 0x3e	; 62
 7a0:	ef e0       	ldi	r30, 0x0F	; 15
 7a2:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__epilogue_restores__+0x6>

000007a6 <isspace>:
 7a6:	91 11       	cpse	r25, r1
 7a8:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__ctype_isfalse>
 7ac:	80 32       	cpi	r24, 0x20	; 32
 7ae:	19 f0       	breq	.+6      	; 0x7b6 <isspace+0x10>
 7b0:	89 50       	subi	r24, 0x09	; 9
 7b2:	85 50       	subi	r24, 0x05	; 5
 7b4:	c8 f7       	brcc	.-14     	; 0x7a8 <isspace+0x2>
 7b6:	08 95       	ret

000007b8 <strchr_P>:
 7b8:	fc 01       	movw	r30, r24
 7ba:	05 90       	lpm	r0, Z+
 7bc:	06 16       	cp	r0, r22
 7be:	21 f0       	breq	.+8      	; 0x7c8 <strchr_P+0x10>
 7c0:	00 20       	and	r0, r0
 7c2:	d9 f7       	brne	.-10     	; 0x7ba <strchr_P+0x2>
 7c4:	c0 01       	movw	r24, r0
 7c6:	08 95       	ret
 7c8:	31 97       	sbiw	r30, 0x01	; 1
 7ca:	cf 01       	movw	r24, r30
 7cc:	08 95       	ret

000007ce <fgetc>:
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	ec 01       	movw	r28, r24
 7d4:	2b 81       	ldd	r18, Y+3	; 0x03
 7d6:	20 ff       	sbrs	r18, 0
 7d8:	33 c0       	rjmp	.+102    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 7da:	26 ff       	sbrs	r18, 6
 7dc:	0a c0       	rjmp	.+20     	; 0x7f2 <fgetc+0x24>
 7de:	2f 7b       	andi	r18, 0xBF	; 191
 7e0:	2b 83       	std	Y+3, r18	; 0x03
 7e2:	8e 81       	ldd	r24, Y+6	; 0x06
 7e4:	9f 81       	ldd	r25, Y+7	; 0x07
 7e6:	01 96       	adiw	r24, 0x01	; 1
 7e8:	9f 83       	std	Y+7, r25	; 0x07
 7ea:	8e 83       	std	Y+6, r24	; 0x06
 7ec:	8a 81       	ldd	r24, Y+2	; 0x02
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	29 c0       	rjmp	.+82     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 7f2:	22 ff       	sbrs	r18, 2
 7f4:	0f c0       	rjmp	.+30     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7f6:	e8 81       	ld	r30, Y
 7f8:	f9 81       	ldd	r31, Y+1	; 0x01
 7fa:	80 81       	ld	r24, Z
 7fc:	08 2e       	mov	r0, r24
 7fe:	00 0c       	add	r0, r0
 800:	99 0b       	sbc	r25, r25
 802:	00 97       	sbiw	r24, 0x00	; 0
 804:	19 f4       	brne	.+6      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 806:	20 62       	ori	r18, 0x20	; 32
 808:	2b 83       	std	Y+3, r18	; 0x03
 80a:	1a c0       	rjmp	.+52     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 80c:	31 96       	adiw	r30, 0x01	; 1
 80e:	f9 83       	std	Y+1, r31	; 0x01
 810:	e8 83       	st	Y, r30
 812:	0e c0       	rjmp	.+28     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 814:	ea 85       	ldd	r30, Y+10	; 0x0a
 816:	fb 85       	ldd	r31, Y+11	; 0x0b
 818:	09 95       	icall
 81a:	97 ff       	sbrs	r25, 7
 81c:	09 c0       	rjmp	.+18     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 81e:	2b 81       	ldd	r18, Y+3	; 0x03
 820:	01 96       	adiw	r24, 0x01	; 1
 822:	11 f0       	breq	.+4      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 824:	80 e2       	ldi	r24, 0x20	; 32
 826:	01 c0       	rjmp	.+2      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 828:	80 e1       	ldi	r24, 0x10	; 16
 82a:	82 2b       	or	r24, r18
 82c:	8b 83       	std	Y+3, r24	; 0x03
 82e:	08 c0       	rjmp	.+16     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 830:	2e 81       	ldd	r18, Y+6	; 0x06
 832:	3f 81       	ldd	r19, Y+7	; 0x07
 834:	2f 5f       	subi	r18, 0xFF	; 255
 836:	3f 4f       	sbci	r19, 0xFF	; 255
 838:	3f 83       	std	Y+7, r19	; 0x07
 83a:	2e 83       	std	Y+6, r18	; 0x06
 83c:	99 27       	eor	r25, r25
 83e:	02 c0       	rjmp	.+4      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 840:	8f ef       	ldi	r24, 0xFF	; 255
 842:	9f ef       	ldi	r25, 0xFF	; 255
 844:	df 91       	pop	r29
 846:	cf 91       	pop	r28
 848:	08 95       	ret

0000084a <ungetc>:
 84a:	fb 01       	movw	r30, r22
 84c:	23 81       	ldd	r18, Z+3	; 0x03
 84e:	20 ff       	sbrs	r18, 0
 850:	12 c0       	rjmp	.+36     	; 0x876 <ungetc+0x2c>
 852:	26 fd       	sbrc	r18, 6
 854:	10 c0       	rjmp	.+32     	; 0x876 <ungetc+0x2c>
 856:	8f 3f       	cpi	r24, 0xFF	; 255
 858:	3f ef       	ldi	r19, 0xFF	; 255
 85a:	93 07       	cpc	r25, r19
 85c:	61 f0       	breq	.+24     	; 0x876 <ungetc+0x2c>
 85e:	82 83       	std	Z+2, r24	; 0x02
 860:	2f 7d       	andi	r18, 0xDF	; 223
 862:	20 64       	ori	r18, 0x40	; 64
 864:	23 83       	std	Z+3, r18	; 0x03
 866:	26 81       	ldd	r18, Z+6	; 0x06
 868:	37 81       	ldd	r19, Z+7	; 0x07
 86a:	21 50       	subi	r18, 0x01	; 1
 86c:	31 09       	sbc	r19, r1
 86e:	37 83       	std	Z+7, r19	; 0x07
 870:	26 83       	std	Z+6, r18	; 0x06
 872:	99 27       	eor	r25, r25
 874:	08 95       	ret
 876:	8f ef       	ldi	r24, 0xFF	; 255
 878:	9f ef       	ldi	r25, 0xFF	; 255
 87a:	08 95       	ret

0000087c <__ctype_isfalse>:
 87c:	99 27       	eor	r25, r25
 87e:	88 27       	eor	r24, r24

00000880 <__ctype_istrue>:
 880:	08 95       	ret

00000882 <__prologue_saves__>:
 882:	2f 92       	push	r2
 884:	3f 92       	push	r3
 886:	4f 92       	push	r4
 888:	5f 92       	push	r5
 88a:	6f 92       	push	r6
 88c:	7f 92       	push	r7
 88e:	8f 92       	push	r8
 890:	9f 92       	push	r9
 892:	af 92       	push	r10
 894:	bf 92       	push	r11
 896:	cf 92       	push	r12
 898:	df 92       	push	r13
 89a:	ef 92       	push	r14
 89c:	ff 92       	push	r15
 89e:	0f 93       	push	r16
 8a0:	1f 93       	push	r17
 8a2:	cf 93       	push	r28
 8a4:	df 93       	push	r29
 8a6:	cd b7       	in	r28, 0x3d	; 61
 8a8:	de b7       	in	r29, 0x3e	; 62
 8aa:	ca 1b       	sub	r28, r26
 8ac:	db 0b       	sbc	r29, r27
 8ae:	0f b6       	in	r0, 0x3f	; 63
 8b0:	f8 94       	cli
 8b2:	de bf       	out	0x3e, r29	; 62
 8b4:	0f be       	out	0x3f, r0	; 63
 8b6:	cd bf       	out	0x3d, r28	; 61
 8b8:	09 94       	ijmp

000008ba <__epilogue_restores__>:
 8ba:	2a 88       	ldd	r2, Y+18	; 0x12
 8bc:	39 88       	ldd	r3, Y+17	; 0x11
 8be:	48 88       	ldd	r4, Y+16	; 0x10
 8c0:	5f 84       	ldd	r5, Y+15	; 0x0f
 8c2:	6e 84       	ldd	r6, Y+14	; 0x0e
 8c4:	7d 84       	ldd	r7, Y+13	; 0x0d
 8c6:	8c 84       	ldd	r8, Y+12	; 0x0c
 8c8:	9b 84       	ldd	r9, Y+11	; 0x0b
 8ca:	aa 84       	ldd	r10, Y+10	; 0x0a
 8cc:	b9 84       	ldd	r11, Y+9	; 0x09
 8ce:	c8 84       	ldd	r12, Y+8	; 0x08
 8d0:	df 80       	ldd	r13, Y+7	; 0x07
 8d2:	ee 80       	ldd	r14, Y+6	; 0x06
 8d4:	fd 80       	ldd	r15, Y+5	; 0x05
 8d6:	0c 81       	ldd	r16, Y+4	; 0x04
 8d8:	1b 81       	ldd	r17, Y+3	; 0x03
 8da:	aa 81       	ldd	r26, Y+2	; 0x02
 8dc:	b9 81       	ldd	r27, Y+1	; 0x01
 8de:	ce 0f       	add	r28, r30
 8e0:	d1 1d       	adc	r29, r1
 8e2:	0f b6       	in	r0, 0x3f	; 63
 8e4:	f8 94       	cli
 8e6:	de bf       	out	0x3e, r29	; 62
 8e8:	0f be       	out	0x3f, r0	; 63
 8ea:	cd bf       	out	0x3d, r28	; 61
 8ec:	ed 01       	movw	r28, r26
 8ee:	08 95       	ret

000008f0 <_exit>:
 8f0:	f8 94       	cli

000008f2 <__stop_program>:
 8f2:	ff cf       	rjmp	.-2      	; 0x8f2 <__stop_program>
